## 需要安装R包 3.3 或 以上版本
#source("https://bioconductor.org/biocLite.R")
#biocLite("ropls")
# 导入数据
args<-commandArgs(T)
library(ropls)
library(ggplot2)
input = args[1]
group = args[2]
output = args[3]
scale = args[4]  ##c("none", "center", "pareto", "standard")[3]
type = args[5]  ## PLS-DA OPLS-DA
#islog2 = args[6] ## log2 data
filter_flag = 0
if(length(args) > 100){ ## no use here 
    cols=as.numeric((unlist(strsplit(args[6],','))))
    group_names=unlist(strsplit(args[7],','))
    cutfc = log2(as.numeric(args[8]))
    cutvip  = args[9]
    filter_flag = 1
}
## output file 
plsda_pdf =  paste(output,".plsda.pdf",sep="")
plsda_pdf_nolabel =  paste(output,".plsda.nosampleid.pdf",sep="")
oplsda_pdf =  paste(output,".oplsda.pdf",sep="")
pcapdf = paste(output,".pca.pdf",sep="")
pcapdf_nolabel = paste(output,".pca.nosampleid.pdf",sep="")
outpc = paste(output,".pc.xls",sep="")

vip = paste(output,".vip.xls",sep="")
perm_pdf = paste(output,".permutation.pdf",sep="")
load_plot = paste(output,".loading_plot.pdf",sep="")
plsda_allpdf =  paste(output,".plsda.all.pdf",sep="")

all = paste(output,".all.xls",sep="")
filter = paste(output,".filter.xls",sep="")

if(file.exists("Rplots.pdf")){
    cat("Rplots.pdf is exist! rm it!!")
    file.remove("Rplots.pdf")
}

expr=read.table(input,header=T,row.names=1,sep="\t",check.names=FALSE,quote="")
expr0 = expr
#expr=round(expr,6)
sample_infor=read.table(group,header=F,sep="\t")
colnames(sample_infor) = c("names","group")

expr=t(expr)

## prepare gourp info
expr2 = data.frame(expr[,1:2])
expr2$names = rownames(expr2)
expr2 = merge(expr2,sample_infor,by="names",sort=FALSE)
head(expr2)
gp=as.factor(as.character(expr2$group))
gp

## set crossvalI
if(nrow(expr)>=7){
    crossvalI=7
}else{
    crossvalI=nrow(expr)
}

permI = 200
pre = 1
tryCatch( 
    {
        plsda=opls(expr,gp,crossvalI=crossvalI,scaleC=scale,plotL = FALSE,permI=permI)
        pre=plsda@summaryDF$pre 
    },
    error = function(e){cat(conditionMessage(e),"\n")}
)

#plsda=opls(expr,gp,crossvalI=crossvalI,scaleC=scale,plotL = FALSE,permI=permI)
#pre = plsda@summaryDF$pre
#if(type == "PLS-DA"){
if(pre<2){  ## if predI == 1, use 2
    plsda=opls(expr,gp,predI=2,crossvalI=crossvalI,scaleC=scale,plotL = FALSE,permI=permI)
}
plot(plsda, typeVc = "x-score",parAsColFcVn = gp, parEllipsesL = TRUE)
#dev.off()
file.rename("Rplots.pdf",plsda_pdf)
plot(plsda, typeVc = "x-score",parAsColFcVn = gp, parEllipsesL = TRUE,parLabVc=rep(".",length(gp)),parCexN=3)
file.rename("Rplots.pdf",plsda_pdf_nolabel)

#}else{
if(type == "OPLS-DA"){
    pre = 1
    tryCatch( 
        {
            plsda=opls(expr,gp,crossvalI=crossvalI,orthoI=NA,scaleC=scale,plotL = FALSE,permI=200)
            pre=plsda@summaryDF$pre 
        },
        error = function(e){cat(conditionMessage(e),"\n")}
    )
    if(pre<2){
        plsda <- opls(expr,gp,crossvalI=crossvalI,orthoI=1,scaleC=scale,plotL = FALSE,permI=permI)
    }else{
        plsda <- opls(expr,gp,crossvalI=crossvalI,orthoI=NA,scaleC=scale,plotL = FALSE,permI=permI)
    }
    plsda_pdf =  paste(output,".oplsda.pdf",sep="")
    plot(plsda, typeVc = "x-score",parAsColFcVn = gp, parEllipsesL = TRUE)
    file.rename("Rplots.pdf",plsda_pdf)
    plsda_pdf =  paste(output,".oplsda.nosampleid.pdf",sep="")
    plot(plsda, typeVc = "x-score",parAsColFcVn = gp, parEllipsesL = TRUE,parLabVc=rep(".",length(gp)),parCexN=3)
    file.rename("Rplots.pdf",plsda_pdf)
}
#str(plsda)

## save result
#file.rename("Rplots.pdf",plsda_allpdf)
#pdf(plsda_pdf,height=8,width=8)
#plot(plsda, typeVc = "x-score",parAsColFcVn = gp, parEllipsesL = TRUE,parDevNewL = FALSE)
#plot(plsda, typeVc = "x-score",parAsColFcVn = gp, parEllipsesL = TRUE)
#dev.off()
#file.rename("Rplots.pdf",plsda_pdf)

## permutation
#plsda@suppLs$permMN
plot(plsda,typeVc="permutation")
file.rename("Rplots.pdf",perm_pdf)

## loading plot 
plot(plsda,typeVc="x-loading")
file.rename("Rplots.pdf",load_plot)

#write.table(plsda@loadingMN,file="tt.xls",sep="\t") 
#pdf(load_plot,width=8,height=8)
#plot(plsda@loadingMN)
#dev.off()


## vip result
vipVn = as.data.frame(plsda@vipVn)
data_vip = data.frame(rownames(vipVn),vipVn)
colnames(data_vip) = c("id","vip")

if(filter_flag == 1){  ## all and filter result 
    ## mean and log2(FC)
    con_mean = apply(expr0[,1:cols[1]], 1, mean )
    treat_mean = apply(expr0[,(1+cols[1]):(cols[1]+cols[2])], 1, mean )
    log2fc = log2(treat_mean/con_mean)
    expr_out = expr0
    expr_out$control_mean = con_mean
    colnames(expr_out)[ncol(expr_out)] = group_names[1]
    expr_out$treat_mean = treat_mean
    colnames(expr_out)[ncol(expr_out)] = group_names[2]
    expr_out$'log2(fc)' = log2fc 

    expr_out = data.frame(rownames(expr_out),expr_out,check.names=F)
    colnames(expr_out)[1] = "id"
    expr_out = merge(expr_out,data_vip,by="id",all.x=TRUE)

    expr_out = expr_out[order(-expr_out$vip),]


    ## filter result (log2fc) >= 1 , vip >=1
    filter_out = expr_out[which(abs(expr_out[,'log2(fc)'])>=cutfc & expr_out[,'vip']>=cutvip),]
    write.table(filter_out,file=filter,quote=FALSE,row.names=FALSE,sep="\t") 
    write.table(expr_out,file=all,quote=FALSE,row.names=FALSE,sep="\t")    # ˤ³񕈐ֵ 

}else{ ## save vip 
    write.table(data_vip,file=vip,quote=FALSE,row.names=FALSE,sep="\t") 
}


#run pca
#plsda = opls(expr,plotL = FALSE)
pre = 1
tryCatch( 
    {
        plsda = opls(expr,plotL = FALSE,crossvalI=crossvalI,scaleC=scale)
        pre=plsda@summaryDF$pre 
    },
    error = function(e){cat(conditionMessage(e),"\n")}
)

if(pre<2){
        plsda = opls(expr,plotL = FALSE,predI=2,crossvalI=crossvalI)
}
write.table(plsda@scoreMN,file=outpc,sep="\t") 

pro1 <- as.numeric(sprintf("%.3f",plsda@modelDF[1,1]))*100
pro2 <- as.numeric(sprintf("%.3f",plsda@modelDF[2,1]))*100
pro1
pro2
#q()
pc=as.data.frame(plsda@scoreMN[,1:2])
pc$names=rownames(pc)
pc=merge(pc,sample_infor,by="names",sort=FALSE)
write.table(pc,file=outpc,sep="\t",quote=FALSE,row.names=FALSE) 

xlab=paste("PC1(",pro1,"%)",sep="") 
ylab=paste("PC2(",pro2,"%)",sep="")
if(length(unique(group)) > 6){
    pca = ggplot(pc,aes(p1,p2)) + geom_point(size=3,aes(color=group))
}else{
    pca=ggplot(pc,aes(p1,p2)) + geom_point(size=3,aes(shape=group,color=group))
}
#pca = pca + geom_text(aes(label=names),size=4,vjust= -1)+

pca = pca + labs(x=xlab,y=ylab,title="PCA") + 
geom_hline(yintercept=0,linetype=4,color="grey") + 
geom_vline(xintercept=0,linetype=4,color="grey") + 
theme_bw() 
pca2 = pca + geom_text(aes(label=names),size=4,vjust= -1)

#ggsave(outplot,pca,width=10,height=8)
ggsave(pcapdf,pca,width=10,height=8)
ggsave(pcapdf_nolabel,pca2,width=10,height=8)
1
